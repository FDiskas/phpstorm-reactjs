<templateSet group="ReactJS">
  <template name="rcc" value="var React = require('react');&#10;&#10;var $class$ = React.createClass({&#10;&#10;  render: function() {&#10;    return (&#10;      &lt;div /&gt;&#10;    );&#10;  }&#10;&#10;});&#10;&#10;module.exports = $class$;" description="Create a new React.JS component" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cs" value="var cx = React.addons.classSet;" description="React: var cx = React.addons.classSet;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cdm" value="componentDidMount: function() {&#10;  $END$&#10;}," description="React: componentDidMount: fn() { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cdup" value="componentDidUpdate: function(prevProps, prevState) {&#10;  $END$&#10;}," description="React: componentDidUpdate: fn(pp, ps) { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cwm" value="componentWillMount: function() {&#10;  $END$&#10;}," description="React: componentWillMount: fn() { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cwr" value="componentWillReceiveProps: function(nextProps) {&#10;  $END$&#10;}," description="React: componentWillReceiveProps: fn(np) { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cwun" value="componentWillUnmount: function() {&#10;  $END$&#10;}," description="React: componentWillUnmount: fn() { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cwu" value="componentWillUpdate: function(nextProps, nextState) {&#10;  $END$&#10;}," description="React: componentWillUpdate: fn(np, ns) { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cw" value="cx({&#10;  $END$: &#10;});" description="React: cx({ ... })" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fup" value="forceUpdate($call$);" description="React: forceUpdate(...)" toReformat="false" toShortenFQNames="true">
    <variable name="call" expression="" defaultValue="callback" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="gdp" value="getDefaultProps: function() {&#10;  return {&#10;    $END$&#10;  };&#10;}," description="React: getDefaultProps: fn() { return {...} }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="gis" value="getInitialState: function() {&#10;  return {&#10;    $END$: &#10;  };&#10;}," description="React: getInitialState: fn() { return {...} }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ism" value="isMounted()" description="React: isMounted()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="pt" value="propTypes: {&#10;  $END$: React.PropTypes.string&#10;}," description="React: propTypes { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ren" value="render: function() {&#10;  return (&#10;    &lt;div /&gt;$END$&#10;  );&#10;}" description="React: render: fn() { return ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="sst" value="this.setState({&#10;  $START$: $END$ &#10;});" description="React: this.setState({ ... })" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="scu" value="shouldComponentUpdate: function(nextProps, nextState) {&#10;  $END$&#10;}," description="React: shouldComponentUpdate: fn(np, ns) { ... }" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="props" value="this.props.$END$" description="React: this.props." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="refs" value="this.refs.$END$" description="React: this.refs." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="state" value="this.state.$END$" description="React: this.state." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>
